input {
  redis {
    host => "localhost"
    key => "filebeat"
    data_type => "list"
    codec => json
  }
}

filter {
  if "_jsonparsefailure" in [tags] {
    drop { }
  }

  json {
    source => "message"
  }

  date { match => [ "ts", "ISO8601" ] }

  mutate {
    replace => { "type" => "bro" }
    #need to rename the following because Elastic assumes they are objects and fails
    rename => {
        "id" => "bro_id"
        "@stream" => "[@meta][stream]"
        "@system" => "[@meta][system]"
        "@proc"   => "[@meta][proc]"
        "host" => "http_host"
        "id.resp_p" => "id_resp_p"
        "id.resp_h" => "id_resp_h"
        "id.orig_p" => "id_orig_p"
        "id.orig_h" => "id_orig_h"
    }
  }

  mutate {
    convert => {
      "id_orig_p" => "integer"
      "id_resp_p" => "integer"
      "trans_depth" => "integer" 
      "request_body_len" => "integer" 
      "response_body_len" => "integer" 
      "status_code" => "integer" 
      "info_code" => "integer" 
    }
    add_field => {
      "[@meta][event_type]" => "network"
      "[@meta][id]" => "%{uid}"
      "[@meta][orig_host]" => "%{id_orig_h}"
      "[@meta][orig_port]" => "%{id_orig_p}"
      "[@meta][resp_host]" => "%{id_resp_h}"
      "[@meta][resp_port]" => "%{id_resp_p}"
    }
  }
  
  geoip {
    source => "id_orig_h"
    target => "[@meta][geoip_orig]"
  }
  geoip {
    source => "id_resp_h"
    target => "[@meta][geoip_resp]"
  }

  ruby {
    code => "
    require 'logstash/event'

    logtype = event.get('[@meta][stream]')
    ev_hash = event.to_hash
    meta_hash = ev_hash['@meta']
    timestamp = ev_hash['@timestamp']

    # Cleanup duplicate info
    #meta_hash.delete('stream')
    ev_hash.delete('@meta')
    ev_hash.delete('@timestamp')
    ev_hash.delete('tags')

    result = {
      logtype => ev_hash,
      '@meta' => meta_hash,
      '@timestamp' => timestamp
    }
    event.initialize( result )
    "
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200" 
    manage_template => false
    index => "bro-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
    codec => json
    #user => logstash_internal
    #password => changeme
  }
}
